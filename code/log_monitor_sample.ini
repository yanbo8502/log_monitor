[basic]
log_dir = ~/Codes/dmp_data_server/code/builder/log_performance
log_name_prefix = audience
log_type = csv
emails = yanbo@letv.com
phones = 13810756659
mail_server = http://mailapi.vxlan.net/mail.php
message_server = http://sms.bops.live/index.php
enable = true

[error_words_monitor]
#overall settings
email_subject = 日志异常信息过多报警
email_content = 指定时间内异常信息过多，请处理
count_threshold = {"200":20,"CSV":10}
stats_interval = {"200":30,"CSV":30}
monitor_words = 200,CSV
enable = false

[target_words_monitor]
#overall settings
target_words = 123,COMMA
email_subject = 目标词监控报警
email_content = 目标词日志出现 部分日志内容已经截取，如下所示，请进行处理
enable = false

[user_request_monitor]
#overall settings
target_words = 
timestamp_unit = s
time_format = %d/%b/%Y:%H:%M:%S
enable = false

#for splitted log line items of csv or regx type log line
log_paras_type = {'prefix':'string','reqStartTime':'datetime','reqStartTimeStr':'string', 'direct_client_host': 'string' , 'direct_client_port':'int' , 'real_client_host':'string' , 'server_mark' :'string' , 'request_uri' : 'string', 'uid' :'string', 'devide_id' : 'string', 'device_type' : 'string' , 'response_time':'float'}
log_paras_indice = {'prefix':0, 'reqStartTime':2,'reqStartTimeStr':2, 'direct_client_host': 0, 'real_client_host':9 , 'server_mark' :10 , 'request_uri' : 4, 'response_time':12}

#for extracting items in non-regular format log line by regx matching
log_regx = ([\d.]*)\ -\ (\S+)\ \[(\S+)\ [\S]+\]\ "(\S+)?[\s]?(\S+)?.*?"\ (\d+)\ (\d+)\ "(\S+)"\ "([^"]*)"\ "([^"]*)" ([\d.:]*)\ ([\d.]*)\ ([\d.]*)

[overtime_monitor]
#overall settings
request_time_unit = s
time_cost_unit = ms
#time_format = %d/%b/%Y:%H:%M:%S
time_format =  %Y-%m-%d %H:%M:%S
monitor_word = audience_service::user2audience
overtime_ratio_threshold = 0.2
time_threshold = 20
stats_interval = 30
email_subject = 超时过多报警
email_content = 在指定时间内，超时请求过多，服务器的性能存在异常，请处理（考虑切换备份）。
enable = true

#for splitted log line items of csv or regx type log line
request_time_index = 2
time_cost_index = 8

#for log items stored in json-type log line
request_time_key = reqStartTimeStr
time_cost_key = response_time

#for extracting items in non-regular format log line by regx matching
log_regx = ([\d.]*)\ -\ (\S+)\ \[(\S+)\ [\S]+\]\ "(\S+)?[\s]?(\S+)?.*?"\ (\d+)\ (\d+)\ "(\S+)"\ "([^"]*)"\ "([^"]*)" ([\d.:]*)\ ([\d.]*)\ ([\d.]*)


[error_status_monitor]
#overall settings
filter_pattern = [audience_service::user2audience]
monitor_words = 404,403
error_ratio_threshold = 0.002
stats_interval = 30
email_subject = 异常接口返回码过多报警
email_content = 在指定时间内，异常返回码过多，请处理。
enable = true

